# Student Profile
# Perfect for: CS students, learners, educational environments
# Install time: ~15 minutes

name: student
description: Educational tools and multiple programming languages for learning
author: OS Post-Install Scripts Team
version: 1.0.0

# What gets installed
packages:
  # Version Control (learning git is essential)
  version_control:
    - git
    - gitg  # GUI for learning
    
  # Programming Languages (variety for learning)
  languages:
    - python3
    - nodejs
    - gcc
    - g++
    - openjdk-17-jdk
    - golang
    
  # Educational Tools
  educational:
    - scratch  # Visual programming
    - code-blocks  # C/C++ IDE
    - thonny  # Python IDE for beginners
    
  # Editors (multiple options)
  editors:
    - vscode
    - vim
    - nano
    - gedit
    
  # Shell (keep it simple)
  shell:
    - bash  # Default, no confusion
    
  # Development Tools
  dev_tools:
    - make
    - gdb  # Debugger for C/C++
    - valgrind  # Memory debugging
    - curl
    - wget
    
  # Documentation Tools
  documentation:
    - pandoc
    - texlive-base  # LaTeX for reports
    - markdown
    
  # Productivity
  productivity:
    - libreoffice
    - evince  # PDF viewer
    - htop
    - tree  # Directory visualization
    
  # Math & Science
  science:
    - octave  # MATLAB alternative
    - scilab
    - maxima  # Computer algebra

# Configuration
config:
  shell:
    default: bash
    add_aliases: true
    educational_prompt: true  # Shows git branch, virtualenv
    
  git:
    setup_credentials: true
    gui_tools: true
    
  vscode:
    install_extensions: true
    extensions:
      - ms-python.python
      - ms-vscode.cpptools
      - vscjava.vscode-java-pack
      - golang.go
      - formulahendry.code-runner  # Run code easily
      - ritwickdey.liveserver  # Web development
      
  create_structure:
    - ~/University
    - ~/University/Semester1
    - ~/University/Projects
    - ~/University/Assignments

# Post-install actions
post_install:
  - message: "ðŸ“š Student environment ready! Happy learning!"
  - show_versions: true
  - create_readme: ~/University/README.md
  - tips: |
      Helpful commands:
      - 'git status' - Check your repository
      - 'python3 -m venv myenv' - Create Python environment
      - 'gcc -o program program.c' - Compile C code
      - 'make' - Build projects

# System requirements
requirements:
  min_ram: 4GB
  recommended_ram: 8GB
  disk_space: 15GB