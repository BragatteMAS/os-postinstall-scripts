name: Test Scripts

on:
  workflow_dispatch:
    inputs:
      reason:
        description: 'Reason for running tests'
        required: true
        default: 'Manual testing'
        type: string
      confirm_major_change:
        description: 'Is this for a major version change?'
        required: false
        default: 'no'
        type: choice
        options:
          - 'yes'
          - 'no'

jobs:
  test-ubuntu:
    name: Test on Ubuntu
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ubuntu-version: ['20.04', '22.04', '24.04']
    
    container:
      image: ubuntu:${{ matrix.ubuntu-version }}
    
    steps:
    - name: Install dependencies
      run: |
        apt-get update
        apt-get install -y git sudo curl wget
    
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Test installation script structure
      run: |
        echo "Testing on Ubuntu ${{ matrix.ubuntu-version }}"
        cd linux
        
        # Check if main script exists and is executable
        test -f post_install.sh
        test -x post_install.sh || chmod +x post_install.sh
        
        # Check if all referenced scripts exist
        for script in auto/*.sh distros/**/*.sh; do
          if [ -f "$script" ]; then
            echo "✓ Found: $script"
          fi
        done
        
        # Dry run test (if implemented)
        # ./post_install.sh --dry-run || true

  test-syntax:
    name: Syntax Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Check bash syntax
      run: |
        find . -name "*.sh" -type f | while read -r script; do
          echo "Syntax check: $script"
          bash -n "$script"
        done
    
    - name: Check for common issues
      run: |
        # Check for Windows line endings
        if grep -r $'\r' --include="*.sh" .; then
          echo "❌ Found Windows line endings in shell scripts"
          exit 1
        fi
        
        # Check for tabs vs spaces consistency
        echo "✓ Line ending check passed"